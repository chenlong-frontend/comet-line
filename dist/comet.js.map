{"version":3,"file":"comet.js","sources":["../index.js"],"sourcesContent":["/*\r\n * @Description: comet-line\r\n * @Author: chenlong\r\n * @Date: 2021-03-22 17:03:35\r\n * @LastEditTime: 2021-03-22 19:34:04\r\n * @LastEditors: chenlong\r\n */\r\n\r\nfunction Point(x, y) {\r\n  this.x = x\r\n  this.y = y\r\n}\r\n\r\nPoint.prototype.toString = function () {\r\n  return `(${this.x}, ${this.y})`\r\n}\r\n\r\nfunction Comet(canvas, option) {\r\n  if (!option || !canvas) return\r\n  const { path, color } = option\r\n  if (!Array.isArray(path)) {\r\n    throw Error('path must be array')\r\n  }\r\n\r\n  let time = 0\r\n  let comets = []\r\n  let pathArr = [].concat(path)\r\n  const ctx = canvas.getContext('2d')\r\n\r\n  function draw() {\r\n    time++\r\n    const currentPath = pathArr[time]\r\n    ctx.clearRect(0, 0, 5000, 5000)\r\n    ctx.lineWidth = 1\r\n    ctx.strokeStyle = 'green'\r\n    ctx.beginPath()\r\n\r\n    for (let i = 0; i < pathArr.length - 1; i++) {\r\n      ctx.moveTo(pathArr[i].x, pathArr[i].y)\r\n      ctx.lineTo(pathArr[i + 1].x, pathArr[i + 1].y)\r\n    }\r\n    ctx.stroke()\r\n    if (comets.length > 30) {\r\n      comets.shift()\r\n    }\r\n    for (let i = 0; i < comets.length; i++) {\r\n      comets[i].a = (i + 1) * 0.03\r\n      comets[i].s = (i + 1) * 0.025\r\n    }\r\n    const b = { a: 1, s: 1, x: currentPath.x, y: currentPath.y }\r\n    comets.push(b);\r\n    for (let i = 0; i< comets.length; i++) {\r\n      const b = comets[i];\r\n      ctx.save();\r\n      ctx.beginPath();\r\n      ctx.globalAlpha = b.a; \r\n      ctx.globalCompositeOperation = 'lighter';\r\n      ctx.fillStyle = 'greenyellow';\r\n      ctx.arc(b.x, b.y, b.s * 1, 0, 2 * Math.PI, false);\r\n      ctx.fill();\r\n      ctx.restore();\r\n    }\r\n    if (time === pathArr.length - 1) {\r\n      time = 0;\r\n    }\r\n    requestAnimationFrame(draw);\r\n  }\r\n  return {\r\n    play: draw\r\n  }\r\n}\r\nComet.Point = Point\r\n\r\nexport default Comet\r\n"],"names":["Point","x","y","Comet","canvas","option","path","color","Array","isArray","Error","time","comets","pathArr","concat","ctx","getContext","play","draw","currentPath","clearRect","lineWidth","strokeStyle","beginPath","i","length","moveTo","lineTo","stroke","shift","a","s","b","push","save","globalAlpha","globalCompositeOperation","fillStyle","arc","Math","PI","fill","restore","requestAnimationFrame","prototype","toString","this"],"mappings":"sOAQA,SAASA,EAAMC,EAAGC,QACXD,EAAIA,OACJC,EAAIA,EAOX,SAASC,EAAMC,EAAQC,OAChBA,IAAWD,EAAQ,aAClBE,KAAEA,EAAFC,MAAQA,GAAUF,MACnBG,MAAMC,QAAQH,SACXI,MAAM,0BAGVC,EAAO,EACPC,EAAS,GACTC,EAAU,GAAGC,OAAOR,SAClBS,EAAMX,EAAOY,WAAW,YAwCvB,CACLC,cAvCOC,IACPP,UACMQ,EAAcN,EAAQF,GAC5BI,EAAIK,UAAU,EAAG,EAAG,IAAM,KAC1BL,EAAIM,UAAY,EAChBN,EAAIO,YAAc,QAClBP,EAAIQ,gBAEC,IAAIC,EAAI,EAAGA,EAAIX,EAAQY,OAAS,EAAGD,IACtCT,EAAIW,OAAOb,EAAQW,GAAGvB,EAAGY,EAAQW,GAAGtB,GACpCa,EAAIY,OAAOd,EAAQW,EAAI,GAAGvB,EAAGY,EAAQW,EAAI,GAAGtB,GAE9Ca,EAAIa,SACAhB,EAAOa,OAAS,IAClBb,EAAOiB,YAEJ,IAAIL,EAAI,EAAGA,EAAIZ,EAAOa,OAAQD,IACjCZ,EAAOY,GAAGM,EAAc,KAATN,EAAI,GACnBZ,EAAOY,GAAGO,EAAc,MAATP,EAAI,SAEfQ,EAAI,CAAEF,EAAG,EAAGC,EAAG,EAAG9B,EAAGkB,EAAYlB,EAAGC,EAAGiB,EAAYjB,GACzDU,EAAOqB,KAAKD,OACP,IAAIR,EAAI,EAAGA,EAAGZ,EAAOa,OAAQD,IAAK,OAC/BQ,EAAIpB,EAAOY,GACjBT,EAAImB,OACJnB,EAAIQ,YACJR,EAAIoB,YAAcH,EAAEF,EACpBf,EAAIqB,yBAA2B,UAC/BrB,EAAIsB,UAAY,cAChBtB,EAAIuB,IAAIN,EAAE/B,EAAG+B,EAAE9B,EAAS,EAAN8B,EAAED,EAAO,EAAG,EAAIQ,KAAKC,IAAI,GAC3CzB,EAAI0B,OACJ1B,EAAI2B,UAEF/B,IAASE,EAAQY,OAAS,IAC5Bd,EAAO,GAETgC,sBAAsBzB,YApD1BlB,EAAM4C,UAAUC,SAAW,iBACjB,IAAGC,KAAK7C,MAAM6C,KAAK5C,MAyD7BC,EAAMH,MAAQA"}